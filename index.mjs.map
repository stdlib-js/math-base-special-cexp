{"version":3,"file":"index.mjs","sources":["../lib/cexp.js","../lib/main.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar copysign = require( '@stdlib/math-base-special-copysign' );\nvar sincos = require( '@stdlib/math-base-special-sincos' );\nvar isnan = require( '@stdlib/math-base-assert-is-nan' );\nvar isInfinite = require( '@stdlib/math-base-assert-is-infinite' );\nvar exp = require( '@stdlib/math-base-special-exp' );\nvar PINF = require( '@stdlib/constants-float64-pinf' );\nvar NINF = require( '@stdlib/constants-float64-ninf' );\n\n\n// MAIN //\n\n/**\n* Computes the exponential function of a complex number.\n*\n* @private\n* @param {(Array|TypedArray|Object)} out - output array\n* @param {number} re - real component\n* @param {number} im - imaginary component\n* @returns {(Array|TypedArray|Object)} output array\n*\n* @example\n* var out = [ 0.0, 0.0 ];\n*\n* var v = cexp( out, 0.0, 1.0 );\n* // returns [ ~0.540, ~0.841 ]\n*\n* var bool = ( v === out );\n* // returns true\n*/\nfunction cexp( out, re, im ) {\n\tvar tmp;\n\tvar e;\n\tif ( isnan( re ) ) {\n\t\tout[ 0 ] = NaN;\n\t\tout[ 1 ] = ( im === 0.0 ) ? im : re;\n\t} else if ( isInfinite( im ) ) {\n\t\tif ( re === PINF ) {\n\t\t\tout[ 0 ] = -re;\n\t\t\tout[ 1 ] = NaN;\n\t\t} else if ( re === NINF ) {\n\t\t\tout[ 0 ] = -0.0;\n\t\t\tout[ 1 ] = copysign( 0.0, im );\n\t\t} else {\n\t\t\tout[ 0 ] = NaN;\n\t\t\tout[ 1 ] = NaN;\n\t\t}\n\t} else {\n\t\te = exp( re );\n\t\tif ( im === 0.0 ) {\n\t\t\tout[ 0 ] = e;\n\t\t\tout[ 1 ] = im;\n\t\t} else {\n\t\t\tsincos( out, im );\n\t\t\ttmp = out[ 0 ];\n\t\t\tout[ 0 ] = out[ 1 ] * e;\n\t\t\tout[ 1 ] = tmp * e;\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = cexp;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar computeExp = require( './cexp.js' );\n\n\n// MAIN //\n\n/**\n* Computes the exponential function of a complex number.\n*\n* @param {(Array|TypedArray|Object)} [out] - output array\n* @param {number} re - real component\n* @param {number} im - imaginary component\n* @returns {(Array|TypedArray|Object)} output array\n*\n* @example\n* var v = cexp( 0.0, 0.0 );\n* // returns [ 1.0, 0.0 ]\n*\n* @example\n* var v = cexp( 1.0, 0.0 );\n* // returns [ ~2.718, 0.0 ]\n*\n* @example\n* var out = [ 0.0, 0.0 ];\n*\n* var v = cexp( out, 1.0, 0.0 );\n* // returns [ ~2.718, 0.0 ]\n*\n* var bool = ( v === out );\n* // returns true\n*/\nfunction cexp( out, re, im ) {\n\tif ( arguments.length === 2 ) {\n\t\treturn computeExp( [ 0.0, 0.0 ], out, re );\n\t}\n\treturn computeExp( out, re, im );\n}\n\n\n// EXPORTS //\n\nmodule.exports = cexp;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the exponential function of a complex number.\n*\n* @module @stdlib/math-base-special-cexp\n*\n* @example\n* var cexp = require( '@stdlib/math-base-special-cexp' );\n*\n* var v = cexp( 0.0, 0.0 );\n* // returns [ 1.0, 0.0 ]\n*\n* @example\n* var cexp = require( '@stdlib/math-base-special-cexp' );\n*\n* var out = [ 0.0, 0.0 ];\n*\n* var v = cexp( out, 0.0, 1.0 );\n* // returns [ ~0.540, ~0.841 ]\n*\n* var bool = ( v === out );\n* // returns true\n*/\n\n// MODULES //\n\nvar cexp = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = cexp;\n"],"names":["copysign","require$$0","sincos","require$$1","isnan","require$$2","isInfinite","require$$3","exp","require$$4","PINF","require$$5","NINF","require$$6","computeExp","out","re","im","tmp","e","NaN","lib","arguments","length"],"mappings":";;koBAsBA,IAAIA,EAAWC,EACXC,EAASC,EACTC,EAAQC,EACRC,EAAaC,EACbC,EAAMC,EACNC,EAAOC,EACPC,EAAOC,EA0DX,IChEIC,ED6BJ,SAAeC,EAAKC,EAAIC,GACvB,IAAIC,EACAC,EA2BJ,OA1BKf,EAAOY,IACXD,EAAK,GAAMK,IACXL,EAAK,GAAe,IAAPE,EAAeA,EAAKD,GACtBV,EAAYW,GAClBD,IAAON,GACXK,EAAK,IAAOC,EACZD,EAAK,GAAMK,KACAJ,IAAOJ,GAClBG,EAAK,IAAO,EACZA,EAAK,GAAMf,EAAU,EAAKiB,KAE1BF,EAAK,GAAMK,IACXL,EAAK,GAAMK,MAGZD,EAAIX,EAAKQ,GACG,IAAPC,GACJF,EAAK,GAAMI,EACXJ,EAAK,GAAME,IAEXf,EAAQa,EAAKE,GACbC,EAAMH,EAAK,GACXA,EAAK,GAAMA,EAAK,GAAMI,EACtBJ,EAAK,GAAMG,EAAMC,IAGZJ,GClBR,ICZAM,EDEA,SAAeN,EAAKC,EAAIC,GACvB,OAA0B,IAArBK,UAAUC,OACPT,EAAY,CAAE,EAAK,GAAOC,EAAKC,GAEhCF,EAAYC,EAAKC,EAAIC"}